from typing import Union

from aiogram import types

from data.config import admins
from keyboards.inline.account_buttons import user_options, user_menu_cd, user_record_keyboard, \
    check_user_record_cancel_keyboard, user_history_keyboard, user_history_back_keyboard
from loader import dp, bot
from utils.db_api.commands import get_user_record, cancel_record, get_user_by_id, update_day_status, get_history_by_id


async def account_user(message: Union[types.Message, types.CallbackQuery], **kwargs):
    markup = await user_options()
    message_text = "–í—ã –∑–∞—à–ª–∏ –≤ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç.\n" \
                   "–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n" \
                   "1.–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞—à—É —Ç–µ–∫—É—â—É—é –∑–∞–ø–∏—Å—å\n" \
                   "2.–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å\n" \
                   "3.–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤–∞—à–∏—Ö –∑–∞–ø–∏—Å–µ–π\n" \
                   "4.–í–∫–ª—é—á–∏—Ç—å\–æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n\n" \
                   f"–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞–∂–º–∏—Ç–µ <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏</b>\n\n"
    if isinstance(message, types.Message):
        await message.answer(text=message_text, reply_markup=markup)

    elif isinstance(message, types.CallbackQuery):
        callback = message
        await callback.message.edit_text(text=message_text, reply_markup=markup)


@dp.callback_query_handler(text="user_record")
async def user_record(callback: types.CallbackQuery, **kwargs):
    try:
        record = await get_user_record(callback.from_user.id)
        message_text = f"<b>–£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞–ø–∏—Å—å.</b>\n\n" \
                       f"–ó–∞–ø–∏—Å—å –Ω–∞ <b>{record.date} {record.start_hour}</b>\n" \
                       f"–ö–æ–Ω—Ç–∞–∫—Ç –∏ –∑–∞–º–µ—Ç–∫–∞:\n" \
                       f"{record.description}\n"
        markup = await user_record_keyboard(hour_id=record.id)
        await callback.message.edit_text(text=message_text, reply_markup=markup)
    except:
        message_text = f'–£ –≤–∞—Å —Å–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏.\n' \
                       f'–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è, –æ—Ç–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é –∏ –≤—ã–±–µ—Ä–∏—Ç–µ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è üìù"'
        await callback.message.edit_text(text=message_text)


async def check_cancel_user_record(callback: types.CallbackQuery, hour_id, **kwargs):
    markup = await check_user_record_cancel_keyboard(hour_id)
    await callback.message.edit_text(text="–û—Ç–º–µ–Ω–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?", reply_markup=markup)


async def confirm_cancel(callback: types.CallbackQuery, hour_id, **kwargs):
    record = await get_user_record(callback.from_user.id)
    day, month, year = record.date.split("/")
    await cancel_record(hour_id=hour_id)
    await update_day_status(day=day, month=month, year=year)
    await callback.message.edit_text(text="–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–ø–∏—Å—å.")
    user = await get_user_by_id(callback.from_user.id)
    await bot.send_message(text=f"–ö–ª–∏–µ–Ω—Ç:\n"
                                f"{user.first_name} {user.last_name if user.last_name else ''} {'@' + user.login if user.login else ''}\n"
                                f"<u>–æ—Ç–º–µ–Ω–∏–ª –∑–∞–ø–∏—Å—å</u> –Ω–∞ <b>{record.date} {record.start_hour}</b>",
                           chat_id=admins[0]
                           )


@dp.callback_query_handler(text="user_history")
async def user_history(callback: types.CallbackQuery, page: int = 1, **kwargs):
    markup = await user_history_keyboard(user_id=callback.from_user.id, page=page)
    await callback.message.edit_text(text="–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø–∏—Å—å", reply_markup=markup)


async def user_history_record(callback: types.CallbackQuery, page, history_id, **kwargs):
    user_rec = await get_history_by_id(history_id=history_id)
    message_text = f"–î–∞—Ç–∞: <b>{user_rec.date}</b>\n" \
                   f"–í—Ä–µ–º—è: {user_rec.start_hour}\n\n" \
                   f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∑–∞–ø–∏—Å–∏: \n" \
                   f"{user_rec.description}\n"
    markup = await user_history_back_keyboard(page=page)
    await callback.message.edit_text(text=message_text, reply_markup=markup)


@dp.callback_query_handler(user_menu_cd.filter())
async def navigate(call: types.CallbackQuery, callback_data: dict):
    current_level = callback_data.get("level")
    user_id = callback_data.get("user_id")
    hour_id = callback_data.get("hour_id")
    page = callback_data.get("page")
    history_id = callback_data.get("history_id")
    levels = {
        "0": account_user,
        "1": user_record,
        "2": check_cancel_user_record,
        "3": confirm_cancel,
        "4": user_history,
        "5": user_history_record
    }
    current_level_function = levels[current_level]

    await current_level_function(
        call,
        hour_id=int(hour_id),
        user_id=int(user_id),
        page=int(page),
        history_id=int(history_id),

    )
